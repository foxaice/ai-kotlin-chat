#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Todoist MCP —Å–µ—Ä–≤–µ—Ä–∞
# –¥–ª—è Gemini Kotlin Chat

set -e

echo "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Todoist MCP —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è Gemini Kotlin Chat"
echo "=================================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
check_requirements() {
    echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."
    
    if ! command -v git &> /dev/null; then
        echo "‚ùå Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Git –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
        exit 1
    fi
    
    if ! command -v node &> /dev/null; then
        echo "‚ùå Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
        exit 1
    fi
    
    if ! command -v npm &> /dev/null; then
        echo "‚ùå npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ npm –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
        exit 1
    fi
    
    echo "‚úÖ –í—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"
}

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
clone_repository() {
    echo "üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ Todoist MCP —Å–µ—Ä–≤–µ—Ä–∞..."
    
    if [ -d "todoist-mcp-server" ]; then
        echo "‚ö†Ô∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è todoist-mcp-server —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        read -p "–£–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é? (y/N): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            rm -rf todoist-mcp-server
        else
            echo "‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞"
            exit 1
        fi
    fi
    
    git clone https://github.com/abhiz123/todoist-mcp-server.git
    echo "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    cd todoist-mcp-server
    
    if [ -f "package.json" ]; then
        npm install
        echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        echo "‚ö†Ô∏è package.json –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    fi
    
    cd ..
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ—Å—Ç–∏
make_executable() {
    echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ—Å—Ç–∏..."
    
    if [ -f "todoist-mcp-server/todoist-mcp-server" ]; then
        chmod +x todoist-mcp-server/todoist-mcp-server
        echo "‚úÖ –§–∞–π–ª —Å–¥–µ–ª–∞–Ω –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º"
    else
        echo "‚ö†Ô∏è –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
        echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ todoist-mcp-server"
        ls -la todoist-mcp-server/
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
test_installation() {
    echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
    
    if [ -x "todoist-mcp-server/todoist-mcp-server" ]; then
        echo "‚úÖ Todoist MCP —Å–µ—Ä–≤–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
        echo "üìÅ –ü—É—Ç—å: $(pwd)/todoist-mcp-server/todoist-mcp-server"
    else
        echo "‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
        exit 1
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
setup_environment() {
    echo "üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .bashrc –∏–ª–∏ .zshrc
    local shell_rc=""
    if [ -f "$HOME/.bashrc" ]; then
        shell_rc="$HOME/.bashrc"
    elif [ -f "$HOME/.zshrc" ]; then
        shell_rc="$HOME/.zshrc"
    else
        echo "‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω .bashrc –∏–ª–∏ .zshrc, —Å–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤—Ä—É—á–Ω—É—é"
        return
    fi
    
    echo "" >> "$shell_rc"
    echo "# Todoist MCP Server –¥–ª—è Gemini Kotlin Chat" >> "$shell_rc"
    echo "export TODOIST_MCP_SERVER_PATH=\"$(pwd)/todoist-mcp-server/todoist-mcp-server\"" >> "$shell_rc"
    
    echo "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ $shell_rc"
    echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: source $shell_rc"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    check_requirements
    clone_repository
    install_dependencies
    make_executable
    test_installation
    setup_environment
    
    echo ""
    echo "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    echo ""
    echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á Todoist: https://todoist.com/app/settings/integrations/developer"
    echo "2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
    echo "   export TODOIST_API_KEY=\"your_api_key_here\""
    echo "3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "   source $HOME/.bashrc  # –∏–ª–∏ .zshrc"
    echo "4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: ./gradlew run"
    echo ""
    echo "üìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ README_TODOIST.md"
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main "$@"
